apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release_config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.cloudpick.yunna"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.2.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release_config
            buildConfigField("int", "APP_ENV", "2")
            buildConfigField("String", "BASE_URL", "\"http://www.yunatop.com/cloudpick/rest/api/v1/\"")
            buildConfigField("boolean", "SHOW_PUSH_LOG", "false")
            buildConfigField("String", "PUSH_PLUGINS", "\"JPUSH\"")
            resValue("string", "app_name", "云拿")
            resValue("string", "jpush_app_key", "d4155acbf753f2408c1ef323")
        }
        debug {
            applicationIdSuffix '.debug'
            buildConfigField("int", "APP_ENV", "0")
            buildConfigField("String", "BASE_URL", "\"http://10.0.2.2:8000/cloudpick/rest/api/v1/\"")
            buildConfigField("boolean", "SHOW_PUSH_LOG", "true")
            buildConfigField("String", "PUSH_PLUGINS", "\"MOCK_PUSH\"")
            resValue("string", "app_name", "云拿-开发")
        }
        //真机调试
        debugMobile {
            applicationIdSuffix '.debug'
            buildConfigField("int", "APP_ENV", "0")
            buildConfigField("String", "BASE_URL", "\"http://10.10.13.111:8000/cloudpick/rest/api/v1/\"")
            buildConfigField("boolean", "SHOW_PUSH_LOG", "true")
            buildConfigField("String", "PUSH_PLUGINS", "\"MOCK_PUSH\"")
            resValue("string", "app_name", "云拿-真机开发")
            signingConfig signingConfigs.release_config
        }
        releaseTest.initWith(buildTypes.release)
        releaseTest {
            applicationIdSuffix '.test'
            buildConfigField("int", "APP_ENV", "1")
            buildConfigField("String", "BASE_URL", "\"http://10.10.10.130:8080/cloudpick/rest/api/v1/\"")
            buildConfigField("boolean", "SHOW_PUSH_LOG", "true")
            buildConfigField("String", "PUSH_PLUGINS", "\"JPUSH\"")
            resValue("string", "app_name", "云拿-测试")
            resValue("string", "jpush_app_key", "44ae7471cb831bb5c0362d27")
            debuggable false
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //修改apk文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
//            def newApkName = defaultConfig.applicationId + "-" + defaultConfig.versionName + ".apk"
            def newApkName = "yunna-" + defaultConfig.versionName + ".apk"
            outputFileName = newApkName;
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-vector-drawable:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.squareup.picasso:picasso:2.3.2'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.google.zxing:android-core:3.2.1'
    compile 'com.android.support:design:26.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    //compile 'com.jwenfeng.pulltorefresh:library:1.2.7'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    //compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.3'//没有使用特殊Header，可以不加这行
    compile 'joda-time:joda-time:2.9.9'
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //gif播放
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.9'
    implementation files('libs/alipaySdk-20170922.jar')
    compile 'com.wang.avi:library:2.1.3'
}
